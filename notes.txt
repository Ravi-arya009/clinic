-see and set roles during login
-protect routes, apply gaurds

###admin
-login
-match roles and then send to dashboard.

-to do (finds)
-load roles from db and store them in cache on app boot. flush cache at role create/update
create_users.blade.php
    make role dropdown dynamic so newly added roles can be fetched automatically
make roles dynamic in authcontroller in store() function while validating
-user_list.blade.php role column is using role array from config. this might cause process overload. look into this.
-role is not working for /admin/dashboard somehow, check it.
-set default title in main layout (low priority).
-clean main layout of bloats, keywords, tags, descriptions etc.
-add profile picture column in db
-remove bloats from user card in admin's user list page.
-filter by not working on admin's user list page.
-load only 9 users and then add load more functionality.
-add constant for gender somewhere, preferrebaly all the constants in a single file.
-add dob column
-add href links on whatsapp and phone
- make create user, view/edit user with same partials. so that errors and success messages can be displayed at the same page.
- remove bloats such as scripts and stylesheets from footer and header. push only needed ones to the views. saves load time.
- add appointment fees somewhere.
- setup ajax for everything in admin panel. Make some universal template/partial/solution to make code less redundant and easily managable.
- change classes name for different pages. for instance, appointment list template is used in clinic list. everywhere the css classes are
according to appointments. change them to clinics otherwise it'll cause confusion in future.
-(superadmin)add an option to make a clinic inactive, also need to add status column in migration.
- need to setup pagination or load more option where required. write once use many
- fetch admin's details on view clinic page on superadmin panel (use model relationships)
- while deleting a lot from js ajax we need to send the post request to the sub domain route instead of the old route.
    -solution: store the prefix route somewhere so that it can be accessed globally.(think about this,
    this technique will be used in all the ajax call in future)
-check the animation and css of see all clinics button on index page.
-on main index page, select2 is disabled for now because it's css is clashing with other css and breaking the ui.
- use datatables where can be instead of panel's list ui. datatables inbuilt searching and sorting.
make sure to use ajax for searching, filters etc to fetch data from the backend asynchronously.

#current task
    #patient
        -add clinic logo in db and view.
        -next available
        -clinic reviews
        -add map location on clinic and then patients can know how much farther the clinic is from their location.(extra feature)

-fix clinic slider on app's index page . Problem arising because of the class used and triggered by js.
    -solution: isolate that class, change name etc.

-make a clinic's profile page just like doctor's profile page.
    -Decide what to display on doctor's profile (copy from practo).
    -Decide what to display on clinic's profile (copy from practo).
    -can change doctor profile 1 or 2 depending upon the content to display on page.
    -add city in users/doctor's  migration and then fetch the search results by city too.
-see all doctors button have wrong vertical spacing on doctors caraousel.
-check header and footer. push scripts and css only on the pages needed.

-add media queries for time slots on doctor profile.

-can start with current date and day name(fetch both from system). then loop through date/days and fetch time slots for respective
day number via timeSlots collection already fetched from db. no need to store, order, or track anything.
once this is done, frontend logic can be taken care of. if frontend becomes complex then create partials to include.



###############
Start with app's landing page and cover till patient's appointment.
-check for any imporovements, ui, bugs, partials, layout etc.
-note them down.
-make an action plan.
-make jira.
-start working.
######

#App's index page

    -Search Section
        -load more //later when doing ajax and js

    -3rd Speciality section
        -when clicked on see all, send to search page and display results. //later (search page)
        -when clicked on single Speciality send to search page with results. //later (search page)
        -need to make a search page with partials that can display both clinics and doctors with see all. (search page)
    -Book our best clinic
        -book now will send to.
        -need to create a section where doctors for respective clinic can be shown. //later (search page)
        -check that cards are showing right infromation and properly fetching from the db.
    -Book our best doctors
        -view profile will send to profile
        -Book now will send to doctor's profile with time slots section focused.
        -check that cards are showing right infromation and properly fetching from the db. (need to create new doctor table with extra columns)

    -Navbar
            -Apply links on menus. //later
            -make a button for doctor/clinic registration right beside the login/signup(maybe later) //later
    -2nd section
            -keep it like this only. ask later for changes or links etc.
    -footer
        -for now do nohting.
        -Ask for content later.

    -bugs
        -when going to doctor, an error is generated saying undefined key. fix that. onlyl anand kumar's profile is working.
    -Misc
        -check each view and see they should be extending layouts, using partials properly.
        -check that all the views are using only css and scripts they need. use push.
        -fix doctor and clinic profile
            -only keep content that is required.
            -add any other content that is missing.
        appointment flow.
            -fix payment page's ui
            -fix booking succes pages content.
            -fix links.
        fix routes
        fix controllers and functions


-fix the uis for doctor and clinic profile, fix the time slot's card's ui
-think about the search page and filters. can clinic and doctor search be combined?
    -make the filter/search page and also include the filter/search parameters.
-add logo in clinics and doctors.
    -if image is not set then show some default image.
-book appointment overlay is not covering the navbar. fix it.
-timeslot is a function of doctor, not user. fix that everywhere. (update: user is doctor because of role column, all doctors are users but all users are not doctors)
-services and pricing section is not dynamic on the doctor's profile
-after patient logs in send to home
-use intended route where necessary.(while booking,)
-layouts and partials are not getting included in register and login page. fix that.
-while registering patients while booking appointment, an extra parameter $source can be sent. by default it should be null.
    if $source is null return views and shits else return $patient.
- use sessions to store needed values temporarily while booking appointment.

use validated['name'] instead of $request->name. research.

-fix show clinic page. also fetch all the doctors associated with that clinic.
####checking flow/routewise. reviewing code while organizing them.
- if timeslot is booked, don't show it.
-fix register/login pages. include layout and partials.
-fix the user dropdown when user is loggen in. show options logout, dashboard, my appointments etc.

-start with clinic admin backend and check everything
-fetch appointments.
