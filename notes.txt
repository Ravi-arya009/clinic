
-to do (finds)
-load roles from db and store them in cache on app boot. flush cache at role create/update
-set default title in main layout (low priority).
-clean main layout of bloats, keywords, tags, descriptions etc.
-add constant for gender somewhere, preferrebaly all the constants in a single file.
-add href links on whatsapp and phone
- setup ajax for everything in admin panel. Make some universal template/partial/solution to make code less redundant and easily managable.
-(superadmin)add an option to make a clinic inactive, also need to add status column in migration.
- fetch admin's details on view clinic page on superadmin panel (use model relationships)
- while deleting a lot from js ajax we need to send the post request to the sub domain route instead of the old route.
    -solution: store the prefix route somewhere so that it can be accessed globally.(think about this,
    this technique will be used in all the ajax call in future)
-check the animation and css of see all clinics button on index page.
-on main index page, select2 is disabled for now because it's css is clashing with other css and breaking the ui.
-see all doctors button have wrong vertical spacing on doctors caraousel.


#App's index page

    -Search Section
        -load more //later when doing ajax and js

    -3rd Speciality section
        -when clicked on see all, send to search page and display results. //later (search page)
        -when clicked on single Speciality send to search page with results. //later (search page)
        -need to make a search page with partials that can display both clinics and doctors with see all. (search page)
    -Book our best clinic
        -need to create a section where doctors for respective clinic can be shown. //later (search page)
    -Navbar
            -Apply links on menus. //later
            -make a button for doctor/clinic registration right beside the login/signup(maybe later) //later
    -2nd section
            -keep it like this only. ask later for changes or links etc.


-think about the search page and filters. can clinic and doctor search be combined?
    -make the filter/search page and also include the filter/search parameters.

-book appointment overlay is not covering the navbar. fix it.
-timeslot is a function of doctor, not user. fix that everywhere. (update: user is doctor because of role column, all doctors are users but all users are not doctors)

-layouts and partials are not getting included in register and login page. fix that.

####checking flow/routewise. reviewing code while organizing them.
- if timeslot is booked, don't show it.
-fix register/login pages. include layout and partials.

-start with clinic admin backend and check everything

-add address in patients table and include it on the view appointment page.

-appointment details should be create or update instead of just create.
-add press enter to upate medicine. this feature is working while adding the medicine.
    -refactor jquery code for medicines.
    -make a universal jquery library for ajax,

-delete medicatins funciton.
- apointment details should be insert or update instead of just insert.

-global auth and middleware is working, setup to all the users.

#### Super Admin ####

#Things left
    -Profile settings not working
    -Specialities and services featue is not implementd
    -Quick view option is not setup on recent clinics widget on dashboard.

#### Admin ####

-create user.
-on guest doctor profile send data using sessions or something else. do not use get in a href. and use validation for qualificaion,speciality and other nullable columns.

app logo, name, etc should come from a single place throughout the whole app.
check why clinicSlug is a compulsory parameter in some functions.


#### flow ###

-on appointment details page new medicine's row is fetched from the page's Dom itself. save it in a js variable and render that on add new click button.
-currently if the medicine row is left blank an integrity constraint error for not nullable column is thrown. if the row is deleted, it works fine.
-in medicine section when a medicine is added then the edit action button doesn't work because the whole section is rendered dynamically via js, fix that.

#next
-remove bloats from appointments page. (use datatables then remove)
generate perscription dynamically after the appointment ends.

-fix view clinic page on guest (when testing guest/patient).

-change patient's contact information on appointments list. currently it's showing contact person's info.
    -it'll happen after gues user is able to add multiple patients to their account.

-medicine's list datable is not loading medicine name automatically when updating the medicine second time.
#######naveen sir's changes####

fetch doctor's list randomly.
alternate/patient's phone number (otp,call will be recieved on this). with checkmarks.
    patient's account can add multiple pateint's on their own account. (max 5)
 od bd tds,sos (doctor's medicine)
sos medicine (take when required)
make medicine ui seamless (after meal)
turn on laboratory test (ask rahul sir)
follow up mein calendar lagao which shows sundays marked with red.
doctor's perscription has a qr that sends to website. (show text login to see medical details/history etc.)
#bug
    patients can book apointment twice if pressed back

medicine delete feature is not available.

put common partials, layouts, views, and controllers in a single global place. (use gates and policies to restrict access)

admin can not edit patient type user because patients are getting saved in a different table than user(just a theory, check it.).

add necessary columns in patients migration also update the patient edit in doctor's panel .

fix appointment page.
    remove patient's information (age, bloodgroup etc) or add into db.

while storing medicines. compositions can also be stored. it's options.
    -can be seached using composition.
        for eg paracetamol gives the result zenflox, dolo etc.
        composition should be dropdown, it makes the tasks easier.

#refractor
-make time slot card partial and use it in admin and doctor's panel

- while fetching appointments for patient on using appointment service, there should be other relationships such as doctors and cliinics etc. fix that.

-Connect controllers with their respective services as you go.
- make add medicine ui good then implement it in doctor's panel.


####current task ####


find a way to associate new patient with admin or doctor.
    If the patient is new, he/she doesn't have any apointments by default and isn't associated with any clinic.
    find a way to overcome this when creating new patient using admin or doctor's panel.


walk in patient have possibly a solution. look into the recent chats of the claude.


since clinic's admin is a user now. we can call a partial to create admin since it needs basic user details only. call this partial everhwhere else.
    -for now, only storing name, phone and password. once the parital is made can also include the same on the clinic's creation page.
    -need to take care of validation. user's validation will be applied, instead of calling createClinicAdmin, can simple call create use inside.


###start from here ###



fix all the authentication. since the db structure is changed now, see if same auth can be used for all the users.
make the auth and middlewares universal so this can be used for multiple user type.

##flow

########################

#### Error Handling ####
    #how to do this
        -Make the whole project, make Contrller s and proper service classes. Throw errors anyway you want and handle anyway you want. just make sure youre handling errors properly and there're no security concerns or bugs.
        -When the project is done a pattern will emerge for erros.
        -Simple make heloper functions that are global and call then when needed. keep everythign in these functions and abstract everything. makes the clean more readable and maintainable.

#### Ajax JQuery ####
    -Follow same method as error handling

########################

can make a component for the errors we call on the view pages (if error->any(). if('success') etc.)

##Super admin##
-Everything works perfectly.
-Only Low priority tasks are left.

-make view/update admin on super admin view clinic page (low priority)
    -Can add more fields while adding clinic admin.(low priority)
    -show admins of a clinic in table (since there can be multiple admins now).

- states, city, specialities can use seeder for input, skipping the cruds for these. (very low priotiry)
    - states, city, specialities can use medicine masters layout partials, logic etc. write once used many.

- fix upload image system ui. (very low priority)
    -will get automatically fixed when i fix it for other panels. just copy it


#start from here
user is getting created on admin panel. including doctors.

    -proper try catch block and error throwing with edge cases.
    -check proper errors.
    -use x alert
        -remove default error if x alert is used.
    -use universal messages (think and research)
        - make reusable function if possible
    -throw error from service clases and catch in the controller. There's no need to create new error messages
    in controller, makes the code redundant.


#####
image upload for user is happening. the ui is broken, check it.
implement the image upload on the clinic.
####

### Extra ###
    -Review clinic slung manager middleware. it might cause problems when the clinic session is not set. think again and fix any edge cases that are found.


** need to create a role checking middleware or helper function and it'll run automatically before doing a task that needs roles and permissions.

**user module is complete.
    -Send proper errors from service class.
    -Use x-alert

#now
-Create Patient
    -Use the user card is possible
    -make create, index, update,

#start from here
make index (dependency, need to make appointments first since the doctor's patients are coming form the apointmetns)



#start from here.

Review doctor from apps landing
    -include time slots correctly.

review the appointment flow and make it robutst.
    -check patient's auth and middlewares.
    -doctor can start/manage the apointment.
        -remove unnceccesary blaots and fix the ui of appointment page.
        -check for missing or extra fields.
    -generate dummy perscription and invoice.


need to make the height of the uploaded images(profile pics and logos) universal/standard so that it doesn't breaks ui.
-spply strcit css rules if needed (max height,width)

-need to work on timeslots module, need to handle the past slots showing on the frontend. take care of it on the backend itself. past slots shouldn't make to the frontend.
-if slot is filled, it should not show on the backend.

#patient
-create service classes
-create request classes
-need to create dependants for patients. and things will be changed everywhere patient is referenced.
- if the patient is already login then disable the patient information while booking the appointment.

#apointment
-clean appointment page. remove bloats.
-decide what to show on this page.
-patient history etc.


### observation ###
fix clinic admin's dashboard widgets.
use inbuilt modals, the one that comes when deleting the time slots. they're sick.
remove delete all button on time slot page.
make profile image update option on user update pages.
create my profile page (user can manage their own profile)
on doctor's profile if whatsapp, email etc not available show N/a or -.
    do this on clinics page too and everwhere else needed.
after patient books appointment view appointment button not working.
    also can make ui of this page better.
patients should be able to go to the dashboard from landing page's navbar
in appointment controller's store method check weather auth is necessary once if a middleware is protecting this route already.

booking page: for now focus is on the backend. Tweak frontend afterwards.
need to review and change a lot of code.
need to include age somewhere in the appointment because doctors need it.
can include whatsapp for patient while creating the appointment.
#
Ask Rahul sir to download the new template. Don't sweat on the frontend too much.



### start from here ###

-Now appointment history will be related to dependant_id instead of patient_id. think about it.

-make number of visits feature along with the history feature.

-need to change the patient's view appointment page.


##next
my patients in doctor's panel should include dependants too

#fix urgently

-need to fix the time slot fetch everywhere. include slot_type = 1


#start from here
-look register first page for more.
-create walk-in patient appointment feature
    -don't get cauth in there's solution in claude or somewhere, look it up.
        -if not found the solution, then think and create one.

patient is getting created, time slot is getting created, now make apointment.
    use proper service classes.


### Sunday ###
-Define the scope of project.
-use service classes.
-proper organized controllers, models, service classes, Views, routes, middlewares, auth.
    -try to make a lot of universals and globals.

-complete invoice and prescription generation with working implementaion in software.

-Start with doctor and patient panel first. (done)
    -implement the required functionalities. (done)
    -test it and tweak to include edge cases. (start with basics, request, validation, controller standards, errors etc and everything should be fine)
    -try to make globals such as service classes, partials etc. (same as above, follow it and patterns will emerge automatically)

-Go to first point and start definine the scope of project.



@@@ patient's list table structure on doctor panel @@@
-patients name (can be dependant name)
-contact person's name and contact (phone/whatsapp)

Add specialities, states, cities etc by using data tables add option.
    -make an ajax call to add entity if success add row on frontend.
    -add button any where and on click trigger everything.

make quick view modal for clinics and anywhere else needed
    -remove current eye anchor link to this and give the clinic's link inside the modal.

-option to make the data repository like states, medicines etc. inactive(global thing)
    -change the column name to is_active.


#fix now
make header images dynamic after the superadmin and admin logs in
make success and error alert use default modals
login pages of super admin and admin are not global, return back to this.
fill appointment type 1/2 while creating appointments.
calculate age and show age at place of dob in appointments
History system (use default modals)
#process
-Check Routes
    -proper naming conventions according to laravel standards.
    -Include middlewares if needed.
        -check middleware atleat once.
    -sending to proper functions with right naming standars and conventiosn.

-check controllers
    -have proper naming conventions
    -are local or global as required.
    -correct naming convenstions and standards of functions.
    -maximize the use of service classes.
    -Are retriving values from sessions if required.
        -move these items into data repository service.

-check migration for any changes (is_active, names, _id names, anything else).
-check models for fillables, uuids etc.

-Check Service Clasees.
    -Using proper naming conventions and standards.
    -take care of singulars and plurals.
    -Consistend parameter's naming conventions.
    -checking all the edge cases
    -storing the errors properly.
        -user related errors at one place.
        -developer related errors at other place.
        *to ensure that user is not getting any developer related error messages.
Check Views
    -Proper, Standard, and Consistence.
        -use push, stack etc in right way.
        -scripts related to that page should be on that page only.
            -can group multiple scripts into smaller chunks in the future
        -check for redundant elements that can be converted into partials or even layout.
            -lot of data repository tables can be made less redundant.
            -other tables such as lists, appointments, user etc can be made more global.


#start from here
on patients view appointment page make another card for patient information
make yet another card that'll display details of the perscription. The base layout would be same just instead of input fields there would be display elements
    -in this card make an button to download the prescription.

walking appointment is happening make the necessary ui changes where needed.
make prescription and invoice feature.
make logo and images feature.

histroy button on view appointment should be conditioned according to the appointment count.

labtest's name is not fetching on the patient's panel fix it today.
fix the ui of medicines table on the patients view appointment page.
fix the dashboard for admin, doctor and patient's panel
on user list page in admin. fetch original progfile image, if not available then show a default image.
remove medicines options from the doctor panels sidebar.
also remove unnceccesary items from the admin sidebar
doctor's profile image is not getting fetched on the app frontend.
    -it's not getting fetched on the doctor's profile too.
    -fix it here and everywhere.

add bio field in the cerate and update doctor in the admin panel while creating the users.


while creating appointments on doctor panel there are mutliple buttons at button`
    -submit, cancel, save and end appointment. keep only the required once.

-change patients image in upcoming apointments at admin dashboard.

#start from here.
-make presctiptions and invoice. make them downloadable.
-see above list too. fix necessary things such as logos, profile pictures etc.


-need to give css height according to the dummy images provided in the doccure template.
    -create classes


#today
-perscription
    -create another view with a route. (Done)
        -include that in modal. (Done)
        -download button will call this route. (not working for some reason, do it later)
-Invoice
    -Decide when it gets activated.
    -when and what to show.
    *How and payment will be done and who'll do it.
-Misc. (currently working)
    -Start From super admin panel and go through all the processes and panels. Including website and patient.
        -fix anything that's broken.
            -Dashboard panels.
            -sidebar items(only necessary items should be kept).
        -Add any missing fields or text.
        -check for proper titles.

#Currently working

        refresh and check
        -make sure images are being fetched on views correctly(doctor/clinic profile. create/view user and clinic. on the app's landing etc.)

        -super admin
            only data repository features are left. everything else is working.

        ##admin
        -Everything is working.

        #doctor
        -everything is working.

        #patient
            -make prescriptions
            -make invoices
            -make family members sidebar option
            -show historical visits.

dependents should aslo be shown to the my patient list of doctor. (not needed, contact person and patient both are being displayed.
-instead of submit on appointment page on doctor, do something that would open the modal of save and end appointment on the update page)
-make unique ids for users clinics etc to show on the view (maybe)

#start from here.
users and clinics are getting fetched on the app's landing.
user profile images is working on admins panel. continue. with other features and then with doctor panenl

#Next (mayb)
create a datatable that can add the rows and use it everywehre (in data repository and family dependants).

##Ask
-who will confirm the pending appointments
-who will oversee the payments
    -staff, receptionist panel will do.

Nedd a staff panel


### Where to start ###

#start from the begining
    -check migrations.
    -models with proper fillables
        -proper and optimized relations.
        -service classes (separation of concerns)
        -controllers functions and ther names
        -routes according to proper naming conventions.
    -create glbals.
        -select 2
        -datatables
        -sweet alert
        - partials
            -image upload sections
            -cards
            -tables
            -lists
