
-to do (finds)
-load roles from db and store them in cache on app boot. flush cache at role create/update
-set default title in main layout (low priority).
-add constant for gender somewhere, preferrebaly all the constants in a single file.
-add href links on whatsapp and phone
-(superadmin)add an option to make a clinic inactive, also need to add status column in migration.
- fetch admin's details on view clinic page on superadmin panel (use model relationships)
-on main index page, select2 is disabled for now because it's css is clashing with other css and breaking the ui.


#App's index page

    -Search Section
        -load more //later when doing ajax and js

    -3rd Speciality section
        -when clicked on see all, send to search page and display results. //later (search page)
        -when clicked on single Speciality send to search page with results. //later (search page)
        -need to make a search page with partials that can display both clinics and doctors with see all. (search page)
    -Book our best clinic
        -need to create a section where doctors for respective clinic can be shown. //later (search page)
    -Navbar
            -Apply links on menus. //later
            -make a button for doctor/clinic registration right beside the login/signup(maybe later) //later
    -2nd section
            -keep it like this only. ask later for changes or links etc.


-think about the search page and filters. can clinic and doctor search be combined?
    -make the filter/search page and also include the filter/search parameters.


-layouts and partials are not getting included in register and login page. fix that.

-add press enter to upate medicine. this feature is working while adding the medicine.
    -refactor jquery code for medicines.
    -make a universal jquery library for ajax,


-global auth and middleware is working, setup to all the users.

#### Super Admin ####


#### Admin ####

-on guest doctor profile send data using sessions or something else. do not use get in a href. and use validation for qualificaion,speciality and other nullable columns.

check why clinicSlug is a compulsory parameter in some functions.


#### flow ###

-on appointment details page new medicine's row is fetched from the page's Dom itself. save it in a js variable and render that on add new click button.
-currently if the medicine row is left blank an integrity constraint error for not nullable column is thrown. if the row is deleted, it works fine.
-in medicine section when a medicine is added then the edit action button doesn't work because the whole section is rendered dynamically via js, fix that.

-medicine's list datable is not loading medicine name automatically when updating the medicine second time.

#######naveen sir's changes####

 od bd tds,sos (doctor's medicine)
sos medicine (take when required)
make medicine ui seamless (after meal)
follow up mein calendar lagao which shows sundays marked with red.
#bug
    patients can book apointment twice if pressed back


put common partials, layouts, views, and controllers in a single global place. (use gates and policies to restrict access)


while storing medicines. compositions can also be stored. it's options.
    -can be seached using composition.
        for eg paracetamol gives the result zenflox, dolo etc.
        composition should be dropdown, it makes the tasks easier.

#refractor

####current task ####


since clinic's admin is a user now. we can call a partial to create admin since it needs basic user details only. call this partial everhwhere else.
    -for now, only storing name, phone and password. once the parital is made can also include the same on the clinic's creation page.
    -need to take care of validation. user's validation will be applied, instead of calling createClinicAdmin, can simple call create use inside.


#errors and globals
    -proper try catch block and error throwing with edge cases.
    -check proper errors.
    -use x alert
        -remove default error if x alert is used.
    -use universal messages (think and research)
        - make reusable function if possible
    -throw error from service clases and catch in the controller. There's no need to create new error messages
    in controller, makes the code redundant.


### Extra ###
    -Review clinic slug manager middleware. it might cause problems when the clinic session is not set. think again and fix any edge cases that are found.


** need to create a role checking middleware or helper function and it'll run automatically before doing a task that needs roles and permissions.


need to make the height of the uploaded images(profile pics and logos) universal/standard so that it doesn't breaks ui.
-apply strcit css rules if needed (max height,width)

### observation ###
use inbuilt modals, the one that comes when deleting the time slots. they're sick.

-option to make the data repository like states, medicines etc. inactive(global thing)
    -change the column name to is_active.

####### process ######
-Check Routes
    -proper naming conventions according to laravel standards.
    -Include middlewares if needed.
        -check middleware atleat once.
    -sending to proper functions with right naming standars and conventiosn.

-check controllers
    -have proper naming conventions
    -are local or global as required.
    -correct naming convenstions and standards of functions.
    -maximize the use of service classes.
    -Are retriving values from sessions if required.
        -move these items into data repository service.

-check migration for any changes (is_active, names, _id names, anything else).
-check models for fillables, uuids etc.

-Check Service Clasees.
    -Using proper naming conventions and standards.
    -take care of singulars and plurals.
    -Consistend parameter's naming conventions.
    -checking all the edge cases
    -storing the errors properly.
        -user related errors at one place.
        -developer related errors at other place.
        *to ensure that user is not getting any developer related error messages.
Check Views
    -Proper, Standard, and Consistence.
        -use push, stack etc in right way.
        -scripts related to that page should be on that page only.
            -can group multiple scripts into smaller chunks in the future
        -check for redundant elements that can be converted into partials or even layout.
            -lot of data repository tables can be made less redundant.
            -other tables such as lists, appointments, user etc can be made more global.

####### /process ######

#Next (maybe)
create a datatable that can add the rows and use it everywehre (in data repository and family dependants).

#############
#super admin
    -states
    -cities
    -speicalities
    -qualifications

#clinic admin
-dashboard
    -show total patients(maybe) (need to fetch unique patient with dependant edge case).
-swal on user create and update (do it today if not time consuming)
-convert add time slots on admin panel to ajax. (later)

#doctor
-swal on my patient update
-when viewing appointments through history the sidebar's upcoming apointment is active. (minor issue)
-show dependants as patients in my patients too.
-save appointment page, swal on save. ajax
    need to handle all the erorrs and edge cases. turning off for now.
-relation is not being fetched in the modal while booking new appointment
-toastr/swal on appointment save.

- if logged in disable the contact person's information while booking new clinic.
-dependant phone should be nullable in the migration

-while fetching appointment history and no of visits only fetch appointments with status completed.

#maybe
-receptionist panel
    -needed for booking confirmation, payment etc.

Subscription model
    -monthly
    -patient wise.

if adding existing doctor to some other clinic then we'll need otp verfication from the doctor's side.


### After lunch ###
    #Super admin
        -states
        -cities
        -specialities
        -qualifications
        -Services

    -Try to make universal solution that can be simply copied anywhere required such as medicine page
        -use claude for architecture
    -create, update, delete
    -use ajax.
        -take care of update after add problem.
    -fix sorting in datatables
        -see if can use datatables for making entry directly into the database

#Next
Otp migration, model and service page class is created. service class don't have working code.
next make a controller. send ajax request from the frontent
    -phone and user type
        super_admin, users, patient (basically table name)
    -verify/validate and generate otp. see register page for the workflow.


#global layout
    -fix the link of breadcrumbs
    -make super admin profile settings (low priority)
    -global changes are not yet made on staff panel.


-change patient's guard's name to patient from patients (singular/plural)
-view appointment table is not looking good (this problem is occuring everywhere accross the panel, make some global solution)

#### missing features ####
    #Super admin
        -delete time slots of clinic on the page view_clinic.blade.php
        -manage data repositories
            -states are related to cities (make sure of this while creating this page)
        -check register for the notes from the day of demo

#after lunch
    -work on global auth
        -look for simplest solution that also is global.
        -use is_clinicUser from the guard.
        -check for all the cases.
